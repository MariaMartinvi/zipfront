/**
 * Script de prueba para el servicio de anonimizaci√≥n multiidioma
 * Ejecutar con: node test-anonymization.js
 */

// Como es un test simple, usamos require en lugar de import
const { anonymizationService } = require('./src/services/anonymizationService.js');

console.log('üß™ INICIANDO PRUEBAS DEL SERVICIO DE ANONIMIZACI√ìN MULTIIDIOMA\n');

// Ejemplos de texto en diferentes idiomas
const testCases = {
  spanish: `[12/03/23, 14:30:15] Dr. Garc√≠a: Hola Mar√≠a L√≥pez, te veo ma√±ana en la Calle Mayor 123, Madrid.
[12/03/23, 14:31:02] Mar√≠a L√≥pez: Perfecto, ¬øtraigo a mi hermano Juan?
[12/03/23, 14:32:15] Dr. Garc√≠a: S√≠, y tambi√©n puedes traer a tu padre.`,

  english: `[12/03/23, 14:30:15] John Smith: Hello Sarah, I'll meet you at 5th Avenue 456, New York.
[12/03/23, 14:31:02] Sarah Johnson: Great, should I bring my brother Michael?
[12/03/23, 14:32:15] John Smith: Yes, and also your mother.`,

  catalan: `[12/03/23, 14:30:15] Pere Sala: Hola Maria, et veig dem√† al Carrer Arag√≥ 123, Barcelona.
[12/03/23, 14:31:02] Maria Puig: Perfecte, porto al meu germ√† Joan?
[12/03/23, 14:32:15] Pere Sala: S√≠, i tamb√© pots portar al teu pare.`,

  german: `[12/03/23, 14:30:15] Dr. M√ºller: Hallo Anna, ich sehe Sie morgen in der Hauptstra√üe 123, Berlin.
[12/03/23, 14:31:02] Anna Schmidt: Perfekt, soll ich meinen Bruder Hans mitbringen?
[12/03/23, 14:32:15] Dr. M√ºller: Ja, und auch Ihre Mutter.`
};

async function runTests() {
  try {
    // 1. Mostrar idiomas soportados
    console.log('üìã IDIOMAS SOPORTADOS:');
    const supportedLanguages = anonymizationService.getSupportedLanguages();
    for (const [code, info] of Object.entries(supportedLanguages)) {
      const spacyStatus = info.spacyAvailable ? '‚úÖ spaCy' : '‚ùå spaCy';
      const compromiseStatus = info.compromiseSupport ? '‚úÖ Compromise' : '‚ùå Compromise';
      console.log(`   ${code}: ${info.name} - ${spacyStatus}, ${compromiseStatus}`);
    }
    console.log('\n' + '='.repeat(80) + '\n');

    // 2. Probar cada idioma
    for (const [language, content] of Object.entries(testCases)) {
      console.log(`üåê PROBANDO: ${language.toUpperCase()}`);
      console.log('üìù Contenido original:');
      console.log(content);
      console.log('\nüîÑ Procesando...\n');

      // Resetear el servicio para cada prueba
      anonymizationService.reset();

      // Procesar contenido
      const startTime = Date.now();
      const anonymized = await anonymizationService.processContentForAzure(content);
      const endTime = Date.now();

      console.log('‚úÖ Contenido anonimizado:');
      console.log(anonymized);
      console.log(`\n‚è±Ô∏è  Tiempo de procesamiento: ${endTime - startTime}ms`);

      // Mostrar estad√≠sticas
      const stats = anonymizationService.getProcessingStats();
      console.log('\nüìä ESTAD√çSTICAS:');
      console.log(`   Idioma detectado: ${stats.currentLanguage}`);
      console.log(`   Participantes procesados: ${stats.participantsProcessed}`);
      console.log(`   Personas mencionadas: ${stats.mentionedPeopleProcessed}`);
      console.log(`   Lugares procesados: ${stats.locationsProcessed}`);

      // Mostrar mapeos para debugging
      const mappings = anonymizationService.getAllMappings();
      if (Object.keys(mappings.participants).length > 0) {
        console.log('\nüóÇÔ∏è  MAPEOS:');
        console.log('   Participantes:', mappings.participants);
        if (Object.keys(mappings.mentionedPeople).length > 0) {
          console.log('   Personas mencionadas:', mappings.mentionedPeople);
        }
        if (Object.keys(mappings.locations).length > 0) {
          console.log('   Lugares:', mappings.locations);
        }
      }

      console.log('\n' + '='.repeat(80) + '\n');
    }

    // 3. Prueba de detecci√≥n de idioma
    console.log('üîç PRUEBA DE DETECCI√ìN DE IDIOMA:');
    const testTexts = {
      'Hola, ¬øc√≥mo est√°s? Me llamo Juan Garc√≠a.': 'Espa√±ol',
      'Hello, how are you? My name is John Smith.': 'Ingl√©s',
      'Hallo, wie geht es dir? Mein Name ist Hans M√ºller.': 'Alem√°n',
      'Bonjour, comment allez-vous? Je m\'appelle Pierre Martin.': 'Franc√©s',
      'Ciao, come stai? Il mio nome √® Marco Rossi.': 'Italiano'
    };

    for (const [text, expectedLanguage] of Object.entries(testTexts)) {
      const detectedLang = anonymizationService.detectLanguage(text);
      const langName = anonymizationService.getSupportedLanguages()[detectedLang]?.name || detectedLang;
      const status = langName.toLowerCase().includes(expectedLanguage.toLowerCase()) ? '‚úÖ' : '‚ö†Ô∏è';
      console.log(`   ${status} "${text.substring(0, 30)}..." ‚Üí ${langName}`);
    }

    console.log('\nüéâ TODAS LAS PRUEBAS COMPLETADAS EXITOSAMENTE!');

  } catch (error) {
    console.error('‚ùå ERROR EN LAS PRUEBAS:', error.message);
    console.error(error.stack);
  }
}

// Ejecutar pruebas
runTests(); 